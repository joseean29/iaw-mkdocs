{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Esta es la p\u00e1gina principal.","title":"Principal"},{"location":"about/","text":"PR\u00c1CTICA 1 IAW Instalaci\u00f3n de la pila LAMP en una m\u00e1quina Ubuntu Server Configuraci\u00f3n previa Lo primero que debemos hacer es crear una m\u00e1quina virtual Ubuntu 20.04 en VirtualBox, en mi caso dej\u00e9 el tama\u00f1o de disco duro y de memoria RAM de forma predeterminada, la red en modo adaptador puente y cargamos la iso. Configuramos las primeras cosas que van saliendo, idioma, zona horaria, etc... Y una vez instalado el SO al completo lo que hacemos es reiniciar y quitar el disco. Despu\u00e9s de esto iniciamos sesi\u00f3n y establecemos una direcci\u00f3n IP est\u00e1tica. Instal\u00e9 SSH para poder conectarme desde mi port\u00e1til y tener m\u00e1s facilidad a la hora de copiar y pegar comandos. Instalaci\u00f3n Apache HTTP Server Comprobamos que tenemos la lista de repositorios y paquetes actualizado mediante el comando: sudo apt update En caso de que hubiera nuevos paquetes para instalar, usamos el siguiente comando: sudo apt upgrade Una vez hayamos actualizado los paquetes instalamos el servidor Apache: sudo apt install apache2 -y A\u00f1adimos \"-y\" a final de los comandos con el fin de que se omita cualquier interacci\u00f3n con el ususario y la instalaci\u00f3n sea directa. Para comprobar que se ha instalado correctamente lo que hacemos es poner en el navegador nuestra direcci\u00f3n IP de la m\u00e1quina servidor y vemos que se nos muestra la p\u00e1gina principal de Apache. Instalaci\u00f3n PHP Para instalar PHP y sus herramientas usaremos: sudo apt install php libapache2-mod-php php-mysql Para comprobar que se ha instalado vamos al entramos al archivo /var/www/html/info.php y con alg\u00fan editor de texto a\u00f1adimos las siguientes l\u00edneas: <?php phpinfo(); ?> Ahora abrimos el navegador y ponemos nuestra direcci\u00f3n IP/info.php, si todo ha salido bien veremos un documento en el que se nos ense\u00f1ar\u00e1 toda la informaci\u00f3n php del servidor. Instalaci\u00f3n MySQL Server Introducimos el comando: sudo apt install mysql-server -y Para comprobar que se ha instalado correctamente podemos acceder al servidor MySQL a trav\u00e9s del comando: sudo mysql -u root Si todo est\u00e1 bien accederemos sin ning\u00fan problema. Instalaci\u00f3n de la aplicaci\u00f3n web propuesta Lo primero que tenemos que hacer es ir a la carpeta en la que vamos a instalar la aplicaci\u00f3n con el comando: cd /var/www/html Para futuras reinstalaciones y dem\u00e1s, nos aseguraremos de que el directorio de la aplicaci\u00f3n no existe elimin\u00e1ndola en caso de que est\u00e9 creado con el comando: sudo rm -rf iaw-practica-lamp Ahora descargamos el repositorio de Github: \"git clone https://github.com/josejuansanchez/iaw-practica-lamp.git\" Posteriormente movemos el contenido del repositorio a la carpeta de nuestro apache: mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ Despu\u00e9s eliminamos el archivo index.html de apache para que al entrar al servidor se nos muestre la aplicaci\u00f3n web: rm -rf /var/www/html/index.html Por \u00faltimo en este apartado crearemos el script para la base de datos de la aplicaci\u00f3n, y eliminaremos el directorio iaw-practica-lamp ya que ya no lo necesitaremos: mysql -u root -p$DB_ROOT_PASSWD < /var/www/html/iaw-practica-lamp/db/database.sql rm -rf /var/www/html/iaw-practica-lamp/ Instalaci\u00f3n Adminer Lo primero que debemos hacer es crear el directorio de instalaci\u00f3n: mkdir /var/www/html/adminer Nos movemos al directorio y una vez all\u00ed descargamos su repositorio de Github con el siguiente comando wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php Movemos los ficheros php al directorio de apache: mv adminer-4.7.7-mysql.php index.php Lo \u00faltimo que haremos en esta instalaci\u00f3n ser\u00e1 cambiarle los permisos al directorio ade apache: chown www-data:www-data * -R Instalaci\u00f3n GoAccess Para esto tenemos que abrir el archivo de repositorios de ubuntu y agregarlo al siguiente repositorio: deb http://deb.goaccess.io/ Tenemos que conseguir la clave de la aplicaci\u00f3n, que se hace as\u00ed: wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - Por \u00faltimo actualizamos nuestra lista de paquetes e instalamos GoAccess: apt update -y apt install goaccess -y Configuraci\u00f3n del control de acceso Creamos un directorio para instalar en \u00e9l el stats de apache: mkdir /var/www/html/stats Dejamos que GoAcces se ejecute en segundo plano: nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html & Creamos un archivo en el que estar\u00e1n las contrase\u00f1as del usuario: htpasswd -b -c $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD Sustituimos las cadenas correspondientes de PATH as\u00ed: sed -i 's#REPLACE_THIS_PATH#$HTTPASSWD_DIR#g' $HTTPASSWD_DIR/000-default.conf Copiamos el archivo de configuraci\u00f3n: cp $HTTPASSWD_DIR/000-default.conf /etc/apache2/sites-available/ Y para terminar reiniciamosapache: systemctl restart apache2 Instalaci\u00f3n AWStats Ejecutamos el siguiente comando: \"apt install awstats -y\" Cambiamos los valores LogFormat y SiteDomain del archivo de configuraci\u00f3n: sed -i 's/LogFormat=4/LogFormat=1/g' /etc/awstats/awstats.conf sed -i 's/SiteDomain=\"\"/SiteDomain=\"practicaiaw.com\"/g' /etc/awstats/awstats.conf Copiamos el archivo editado al directorio: /etc/apache2/conf-available/: cp $HTTPASSWD_DIR/awstats.conf /etc/apache2/conf-available/ Activamos el servicio AWStats con los siguientes comandos: a2enconf awstats serve-cgi-bin a2enmod cgi Reiniciamos apache, modificamos los permisos y actualizamos los logs: systemctl restart apache2 sed -i -e \"s/www-data/root/g\" /etc/cron.d/awstats /usr/share/awstats/tools/update.sh","title":"Pr\u00e1ctica 1"},{"location":"about/#practica-1-iaw","text":"","title":"PR\u00c1CTICA 1 IAW"},{"location":"about/#instalacion-de-la-pila-lamp-en-una-maquina-ubuntu-server","text":"","title":"Instalaci\u00f3n de la pila LAMP en una m\u00e1quina Ubuntu Server"},{"location":"about/#configuracion-previa","text":"Lo primero que debemos hacer es crear una m\u00e1quina virtual Ubuntu 20.04 en VirtualBox, en mi caso dej\u00e9 el tama\u00f1o de disco duro y de memoria RAM de forma predeterminada, la red en modo adaptador puente y cargamos la iso. Configuramos las primeras cosas que van saliendo, idioma, zona horaria, etc... Y una vez instalado el SO al completo lo que hacemos es reiniciar y quitar el disco. Despu\u00e9s de esto iniciamos sesi\u00f3n y establecemos una direcci\u00f3n IP est\u00e1tica. Instal\u00e9 SSH para poder conectarme desde mi port\u00e1til y tener m\u00e1s facilidad a la hora de copiar y pegar comandos.","title":"Configuraci\u00f3n previa"},{"location":"about/#instalacion-apache-http-server","text":"Comprobamos que tenemos la lista de repositorios y paquetes actualizado mediante el comando: sudo apt update En caso de que hubiera nuevos paquetes para instalar, usamos el siguiente comando: sudo apt upgrade Una vez hayamos actualizado los paquetes instalamos el servidor Apache: sudo apt install apache2 -y A\u00f1adimos \"-y\" a final de los comandos con el fin de que se omita cualquier interacci\u00f3n con el ususario y la instalaci\u00f3n sea directa. Para comprobar que se ha instalado correctamente lo que hacemos es poner en el navegador nuestra direcci\u00f3n IP de la m\u00e1quina servidor y vemos que se nos muestra la p\u00e1gina principal de Apache.","title":"Instalaci\u00f3n Apache HTTP Server"},{"location":"about/#instalacion-php","text":"Para instalar PHP y sus herramientas usaremos: sudo apt install php libapache2-mod-php php-mysql Para comprobar que se ha instalado vamos al entramos al archivo /var/www/html/info.php y con alg\u00fan editor de texto a\u00f1adimos las siguientes l\u00edneas: <?php phpinfo(); ?> Ahora abrimos el navegador y ponemos nuestra direcci\u00f3n IP/info.php, si todo ha salido bien veremos un documento en el que se nos ense\u00f1ar\u00e1 toda la informaci\u00f3n php del servidor.","title":"Instalaci\u00f3n PHP"},{"location":"about/#instalacion-mysql-server","text":"Introducimos el comando: sudo apt install mysql-server -y Para comprobar que se ha instalado correctamente podemos acceder al servidor MySQL a trav\u00e9s del comando: sudo mysql -u root Si todo est\u00e1 bien accederemos sin ning\u00fan problema.","title":"Instalaci\u00f3n MySQL Server"},{"location":"about/#instalacion-de-la-aplicacion-web-propuesta","text":"Lo primero que tenemos que hacer es ir a la carpeta en la que vamos a instalar la aplicaci\u00f3n con el comando: cd /var/www/html Para futuras reinstalaciones y dem\u00e1s, nos aseguraremos de que el directorio de la aplicaci\u00f3n no existe elimin\u00e1ndola en caso de que est\u00e9 creado con el comando: sudo rm -rf iaw-practica-lamp Ahora descargamos el repositorio de Github: \"git clone https://github.com/josejuansanchez/iaw-practica-lamp.git\" Posteriormente movemos el contenido del repositorio a la carpeta de nuestro apache: mv /var/www/html/iaw-practica-lamp/src/* /var/www/html/ Despu\u00e9s eliminamos el archivo index.html de apache para que al entrar al servidor se nos muestre la aplicaci\u00f3n web: rm -rf /var/www/html/index.html Por \u00faltimo en este apartado crearemos el script para la base de datos de la aplicaci\u00f3n, y eliminaremos el directorio iaw-practica-lamp ya que ya no lo necesitaremos: mysql -u root -p$DB_ROOT_PASSWD < /var/www/html/iaw-practica-lamp/db/database.sql rm -rf /var/www/html/iaw-practica-lamp/","title":"Instalaci\u00f3n de la aplicaci\u00f3n web propuesta"},{"location":"about/#instalacion-adminer","text":"Lo primero que debemos hacer es crear el directorio de instalaci\u00f3n: mkdir /var/www/html/adminer Nos movemos al directorio y una vez all\u00ed descargamos su repositorio de Github con el siguiente comando wget https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql.php Movemos los ficheros php al directorio de apache: mv adminer-4.7.7-mysql.php index.php Lo \u00faltimo que haremos en esta instalaci\u00f3n ser\u00e1 cambiarle los permisos al directorio ade apache: chown www-data:www-data * -R","title":"Instalaci\u00f3n Adminer"},{"location":"about/#instalacion-goaccess","text":"Para esto tenemos que abrir el archivo de repositorios de ubuntu y agregarlo al siguiente repositorio: deb http://deb.goaccess.io/ Tenemos que conseguir la clave de la aplicaci\u00f3n, que se hace as\u00ed: wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add - Por \u00faltimo actualizamos nuestra lista de paquetes e instalamos GoAccess: apt update -y apt install goaccess -y","title":"Instalaci\u00f3n GoAccess"},{"location":"about/#configuracion-del-control-de-acceso","text":"Creamos un directorio para instalar en \u00e9l el stats de apache: mkdir /var/www/html/stats Dejamos que GoAcces se ejecute en segundo plano: nohup goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html & Creamos un archivo en el que estar\u00e1n las contrase\u00f1as del usuario: htpasswd -b -c $HTTPASSWD_DIR/.htpasswd $HTTPASSWD_USER $HTTPASSWD_PASSWD Sustituimos las cadenas correspondientes de PATH as\u00ed: sed -i 's#REPLACE_THIS_PATH#$HTTPASSWD_DIR#g' $HTTPASSWD_DIR/000-default.conf Copiamos el archivo de configuraci\u00f3n: cp $HTTPASSWD_DIR/000-default.conf /etc/apache2/sites-available/ Y para terminar reiniciamosapache: systemctl restart apache2","title":"Configuraci\u00f3n del control de acceso"},{"location":"about/#instalacion-awstats","text":"Ejecutamos el siguiente comando: \"apt install awstats -y\" Cambiamos los valores LogFormat y SiteDomain del archivo de configuraci\u00f3n: sed -i 's/LogFormat=4/LogFormat=1/g' /etc/awstats/awstats.conf sed -i 's/SiteDomain=\"\"/SiteDomain=\"practicaiaw.com\"/g' /etc/awstats/awstats.conf Copiamos el archivo editado al directorio: /etc/apache2/conf-available/: cp $HTTPASSWD_DIR/awstats.conf /etc/apache2/conf-available/ Activamos el servicio AWStats con los siguientes comandos: a2enconf awstats serve-cgi-bin a2enmod cgi Reiniciamos apache, modificamos los permisos y actualizamos los logs: systemctl restart apache2 sed -i -e \"s/www-data/root/g\" /etc/cron.d/awstats /usr/share/awstats/tools/update.sh","title":"Instalaci\u00f3n  AWStats"},{"location":"practica2/","text":"PR\u00c1CTICA 2 IAW Implantaci\u00f3n de una aplicaci\u00f3n web LAMP en Amazon Web Services (AWS) Acceso a AWS Educate Lo primero, pero no menos importante, es que tenemos que tener es una cuenta en AWS Educate para poder realizar esta pr\u00e1ctica. Iniciamos sesi\u00f3n en la web de AWS Educate y nos vamos a la secci\u00f3n \u201cMy Classroms\u201d una vez all\u00ed entramos a nuestro curso pinchando en \u201cGo to classrom\u201d y posteriormente damos a continuar. CONSOLA AWS Ahora tenemos que entrar dentro de nuestra consola AWS y una vez all\u00ed en los servicios de AWS debemos elegir los servicios \u201cEC2\u201d. Cuando elegimos este tipo de servicio entramos en la pesta\u00f1a de la consola de EC2 y una vez all\u00ed tenemos que irnos a las instancias y ya crear las que queramos. SSH VISUAL STUDIO CODE Antes de explicar el tema de las instancias voy a explicar como conectarnos a ellas desde SSH a trav\u00e9s de Visual Studio Code. En Visual Studio debemos ir a la secci\u00f3n de instalar extensiones (se puede hacer mediante Ctrl + May\u00fas + x). En el buscador escribimos ssh y nos instalamos la extensi\u00f3n \u201cRemote - SSH\u201d. Por ahora esto lo dejamos aqu\u00ed, pero volveremos a hablar de Visual Studio m\u00e1s tarde. CREACI\u00d3N DE LA INSTANCIA La m\u00e1quina que vamos a crear para esta pr\u00e1ctica ser\u00e1 una Community AMI con la \u00faltima versi\u00f3n de Ubuntu Server. Cuando estemos creando la instancia debemos configurar los puertos que estar\u00e1n abiertos, nosotros abrimos el de SSH para poder conectarnos desde Visual Studio Code y los puertos de HTTP y HTTPS para poder acceder. Creamos una clave nueva para poder conectarnos por SSH a la instancia, descargamos la clave y la guardamos en alguna carpeta en la que tengamos permisos para que luego no nos de problemas. Yo en mi caso tengo Windows y la guard\u00e9 en la ruta: \u201cC:\\Users\\Jose Antonio\u201d Para terminar estre paso creamos un par de claves (p\u00fablica y privada) para conectar por SSH con su instancia. LANZAR INSTANDIA DESDE VISUAL STUDIO CODE Volvemos a Visual Studio Code y pinchamos en el icono de la esquina inferior izquierda que es el de SSH, ah\u00ed se nos abren unas cuantas opciones y nosotros tenemos que elegir la de \u201cRemote SSH: Open configuration file\u2026\u201d y luego elegir la ruta en la que est\u00e1 el SSH. Una vez dentro del apartado de configuraci\u00f3n debemos escribir el siguiente contenido: Host iaw-practica01 HostName ec2-54-208-223-218.compute-1.amazonaws.com User ubuntu IdentityFile \"C:\\Users\\Jose Antonio\\iaw-amazon.pem\" Esto es un ejemplo de lo que habr\u00eda que poner, quiero dejar claro que el Host es cualquier nombre que le quieras dar a la instancia y que el HostName var\u00eda cada vez que inicias la instancia ya que es la direcci\u00f3n DNS p\u00fablica de la instancia, por otra parte en IdentityFile hay que poner la ruta absoluta en la que se encuentra la clave creada anteriormente. Ya creado el archivo de configuraci\u00f3n volvemos a pinchar sobre el icono del SSH y esta vez elegimos la opci\u00f3n \u201cRemote SSH: Connect to Host\u2026\u201d, elegimos el nombre del host y le damos a continuar y luego a Ubuntu. Despu\u00e9s de esto ya estar\u00edamos conectados por SSH as\u00ed que lo que tenemos que hacer es abrir la carpeta llamada Ubuntu y en ella pegar el script de bash de la pr\u00e1ctica 1. Para acabar debemos hacer uso del script de bash que dise\u00f1amos en la pr\u00e1ctica 1 para automatizar la instalaci\u00f3n de la aplicaci\u00f3n web LAMP.","title":"Pr\u00e1ctica 2"},{"location":"practica2/#practica-2-iaw","text":"","title":"PR\u00c1CTICA 2 IAW"},{"location":"practica2/#implantacion-de-una-aplicacion-web-lamp-en-amazon-web-services-aws","text":"","title":"Implantaci\u00f3n de una aplicaci\u00f3n web LAMP en Amazon Web Services (AWS)"},{"location":"practica2/#acceso-a-aws-educate","text":"Lo primero, pero no menos importante, es que tenemos que tener es una cuenta en AWS Educate para poder realizar esta pr\u00e1ctica. Iniciamos sesi\u00f3n en la web de AWS Educate y nos vamos a la secci\u00f3n \u201cMy Classroms\u201d una vez all\u00ed entramos a nuestro curso pinchando en \u201cGo to classrom\u201d y posteriormente damos a continuar.","title":"Acceso a AWS Educate"},{"location":"practica2/#consola-aws","text":"Ahora tenemos que entrar dentro de nuestra consola AWS y una vez all\u00ed en los servicios de AWS debemos elegir los servicios \u201cEC2\u201d. Cuando elegimos este tipo de servicio entramos en la pesta\u00f1a de la consola de EC2 y una vez all\u00ed tenemos que irnos a las instancias y ya crear las que queramos.","title":"CONSOLA AWS"},{"location":"practica2/#ssh-visual-studio-code","text":"Antes de explicar el tema de las instancias voy a explicar como conectarnos a ellas desde SSH a trav\u00e9s de Visual Studio Code. En Visual Studio debemos ir a la secci\u00f3n de instalar extensiones (se puede hacer mediante Ctrl + May\u00fas + x). En el buscador escribimos ssh y nos instalamos la extensi\u00f3n \u201cRemote - SSH\u201d. Por ahora esto lo dejamos aqu\u00ed, pero volveremos a hablar de Visual Studio m\u00e1s tarde.","title":"SSH VISUAL STUDIO CODE"},{"location":"practica2/#creacion-de-la-instancia","text":"La m\u00e1quina que vamos a crear para esta pr\u00e1ctica ser\u00e1 una Community AMI con la \u00faltima versi\u00f3n de Ubuntu Server. Cuando estemos creando la instancia debemos configurar los puertos que estar\u00e1n abiertos, nosotros abrimos el de SSH para poder conectarnos desde Visual Studio Code y los puertos de HTTP y HTTPS para poder acceder. Creamos una clave nueva para poder conectarnos por SSH a la instancia, descargamos la clave y la guardamos en alguna carpeta en la que tengamos permisos para que luego no nos de problemas. Yo en mi caso tengo Windows y la guard\u00e9 en la ruta: \u201cC:\\Users\\Jose Antonio\u201d Para terminar estre paso creamos un par de claves (p\u00fablica y privada) para conectar por SSH con su instancia.","title":"CREACI\u00d3N DE LA INSTANCIA"},{"location":"practica2/#lanzar-instandia-desde-visual-studio-code","text":"Volvemos a Visual Studio Code y pinchamos en el icono de la esquina inferior izquierda que es el de SSH, ah\u00ed se nos abren unas cuantas opciones y nosotros tenemos que elegir la de \u201cRemote SSH: Open configuration file\u2026\u201d y luego elegir la ruta en la que est\u00e1 el SSH. Una vez dentro del apartado de configuraci\u00f3n debemos escribir el siguiente contenido: Host iaw-practica01 HostName ec2-54-208-223-218.compute-1.amazonaws.com User ubuntu IdentityFile \"C:\\Users\\Jose Antonio\\iaw-amazon.pem\" Esto es un ejemplo de lo que habr\u00eda que poner, quiero dejar claro que el Host es cualquier nombre que le quieras dar a la instancia y que el HostName var\u00eda cada vez que inicias la instancia ya que es la direcci\u00f3n DNS p\u00fablica de la instancia, por otra parte en IdentityFile hay que poner la ruta absoluta en la que se encuentra la clave creada anteriormente. Ya creado el archivo de configuraci\u00f3n volvemos a pinchar sobre el icono del SSH y esta vez elegimos la opci\u00f3n \u201cRemote SSH: Connect to Host\u2026\u201d, elegimos el nombre del host y le damos a continuar y luego a Ubuntu. Despu\u00e9s de esto ya estar\u00edamos conectados por SSH as\u00ed que lo que tenemos que hacer es abrir la carpeta llamada Ubuntu y en ella pegar el script de bash de la pr\u00e1ctica 1. Para acabar debemos hacer uso del script de bash que dise\u00f1amos en la pr\u00e1ctica 1 para automatizar la instalaci\u00f3n de la aplicaci\u00f3n web LAMP.","title":"LANZAR INSTANDIA DESDE VISUAL STUDIO CODE"}]}